
package view;

import java.rmi.registry.*;
import java.rmi.registry.Registry;
import model.User;
import java.sql.*;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.UserInterfaceService;
/**
 *
 * @author jeanj
 */
public class UserForm extends javax.swing.JFrame {

    /**
     * Creates new form UserForm
     */
    public UserForm() {
        initComponents();
        addColumnTable();
        dataFromDBToTableuser();
    }
    
    //Global Variables
    DefaultTableModel tableUserGym = new DefaultTableModel();
    
    
    private void addColumnTable(){
       tableUserGym.addColumn("USER ID");
       tableUserGym.addColumn("USERNAME");
       tableUserGym.addColumn("EMAIL");
       tableUserGym.addColumn("PASSWORD");
      
       //Set table model 
       userTable.setModel(tableUserGym);
    }

    private void dataFromDBToTableuser() {
        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
            UserInterfaceService service = (UserInterfaceService) registry.lookup("user");
            List<User> users = service.allUsers();
            tableUserGym.setRowCount(0);
            users.forEach((user) -> {
                 tableUserGym.addRow(new Object[]{
                    user.getUserID(),
                    user.getUserNames(),
                    user.getUserEmail(),
                    user.getUserPassword(),
                    
                 });
             });
        } catch (Exception ex) {
            ex.printStackTrace();
        }

}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userIDTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        userEmailTxt = new javax.swing.JTextField();
        userPasswordTxt = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        registerUserBtn = new javax.swing.JButton();
        updateUserBtn = new javax.swing.JButton();
        deleteUserBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        userSearchBtn = new javax.swing.JButton();
        userSearchIDTxt = new javax.swing.JTextField();
        printBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        userTable.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("USER ID");

        userIDTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("USER NAMES");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("EMAIL");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("PASSWORD");

        usernameTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        userEmailTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        userPasswordTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userIDTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addComponent(usernameTxt)
                    .addComponent(userEmailTxt)
                    .addComponent(userPasswordTxt))
                .addGap(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 255, 102));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-user-50.png"))); // NOI18N
        jLabel5.setText("USER PAGE");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(562, 562, 562))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addContainerGap())
        );

        registerUserBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        registerUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-add-user-male-48.png"))); // NOI18N
        registerUserBtn.setText("ADD USER");
        registerUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerUserBtnActionPerformed(evt);
            }
        });

        updateUserBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        updateUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-edit-profile-48.png"))); // NOI18N
        updateUserBtn.setText("UPDATE USER");
        updateUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserBtnActionPerformed(evt);
            }
        });

        deleteUserBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        deleteUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-remove-user-female-48.png"))); // NOI18N
        deleteUserBtn.setText("DELETE USER");
        deleteUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserBtnActionPerformed(evt);
            }
        });

        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-back-arrow-48.png"))); // NOI18N
        cancelBtn.setText("CANCEL");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        userSearchBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-search-client-48.png"))); // NOI18N
        userSearchBtn.setText("SEARCH");
        userSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSearchBtnActionPerformed(evt);
            }
        });

        userSearchIDTxt.setFont(new java.awt.Font("Tahoma", 2, 20)); // NOI18N

        printBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        printBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-print-48.png"))); // NOI18N
        printBtn.setText("PRINT");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(registerUserBtn)
                        .addGap(34, 34, 34)
                        .addComponent(updateUserBtn))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteUserBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(printBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userSearchIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userSearchBtn)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(registerUserBtn)
                            .addComponent(updateUserBtn)
                            .addComponent(deleteUserBtn)
                            .addComponent(cancelBtn)
                            .addComponent(userSearchBtn)
                            .addComponent(userSearchIDTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(printBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void registerUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerUserBtnActionPerformed
        // TODO add your handling code here:
        try {
             //Instantiate the Trainer MODEL
            User theUser = new User();
            
            // Validations
            if(userIDTxt.getText().trim().isEmpty()
                || usernameTxt.getText().trim().isEmpty()
                || userEmailTxt.getText().trim().isEmpty()
                || userPasswordTxt.getText().trim().isEmpty())
            {JOptionPane.showMessageDialog(this, "PLEASE PROVIDE ALL INFORMATION!","DATA REQUIRED",JOptionPane.WARNING_MESSAGE);
            }else{
                if(userIDTxt.getText().length() ==5){
                    if(userPasswordTxt.getText().length() >= 6 && userPasswordTxt.getText().length() <= 10 ){

                        //Set The Parameters
                        theUser.setUserID(userIDTxt.getText());
                        theUser.setUserNames(usernameTxt.getText());
                        theUser.setUserEmail(userEmailTxt.getText());
                        theUser.setUserPassword(userPasswordTxt.getText());
                       
                        
                        try {
                            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                            UserInterfaceService service = (UserInterfaceService) registry.lookup("user");
                            String feedback = service.registerUser(theUser);
                            JOptionPane.showMessageDialog(this, feedback);
                            UserForm Us = new UserForm();
                            Us.setVisible(true);
                            this.dispose();
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "USER PASSWORD MUST BE BETWEEN 6 AND 10","TRY AGAIN",JOptionPane.ERROR_MESSAGE);

                    }
                }else{
                    JOptionPane.showMessageDialog(this, "USER ID MUST HAVE 5 CHARACTER","ID ERROR",JOptionPane.ERROR_MESSAGE);
                    dataFromDBToTableuser();
                }
            }
            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_registerUserBtnActionPerformed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        // TODO add your handling code here:
        tableUserGym = (DefaultTableModel)userTable.getModel();
        int select = userTable.getSelectedRow();

        userIDTxt.setText(tableUserGym.getValueAt(select, 0).toString());
        usernameTxt.setText(tableUserGym.getValueAt(select, 1).toString());
        userEmailTxt.setText(tableUserGym.getValueAt(select, 2).toString());
        userPasswordTxt.setText(tableUserGym.getValueAt(select, 3).toString());
    }//GEN-LAST:event_userTableMouseClicked

    private void updateUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserBtnActionPerformed
        // TODO add your handling code here:
        // Surround with Try and Catch
        try{
            //Instantiate the Trainer MODEL
            User theUser= new User();
            // Validations
            if (usernameTxt.getText().trim().isEmpty()
                || userEmailTxt.getText().trim().isEmpty()
                || userPasswordTxt.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "PROVIDE ALL INFORMATION!", "DATA REQUIRED", JOptionPane.WARNING_MESSAGE);
            } else {
                if (userPasswordTxt.getText().length() >= 6 && userPasswordTxt.getText().length() <= 10  ) {
                        //Set The Model
                        theUser.setUserNames(usernameTxt.getText());
                        theUser.setUserEmail(userEmailTxt.getText());
                        theUser.setUserPassword(userPasswordTxt.getText());
                        theUser.setUserID(userIDTxt.getText());
                     
                        try {
                            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                            UserInterfaceService service = (UserInterfaceService) registry.lookup("user");
                            String feedback = service.updateUser(theUser);
                            JOptionPane.showMessageDialog(this, feedback);
                            UserForm Us = new UserForm();
                            Us.setVisible(true);
                            this.dispose();
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                } else {
                    JOptionPane.showMessageDialog(this, "USER PASSWORD MUST BE BETWEEN 6 AND 10", "TRY AGAIN", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_updateUserBtnActionPerformed

    private void deleteUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserBtnActionPerformed
        // TODO add your handling code here:
         // Surround with Try and Catch
        if (usernameTxt.getText().isEmpty() ||
            userEmailTxt.getText().isEmpty() ||
            userPasswordTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "SELECT A USER TO DELETE");
        }else{
        try {
                User theUser = new User(userIDTxt.getText());
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                UserInterfaceService service = (UserInterfaceService) registry.lookup("user");
                String feedback = service.deleteUser(theUser);
                JOptionPane.showMessageDialog(this, feedback);
                UserForm Us = new UserForm();
                Us.setVisible(true);
                this.dispose();
        }catch(Exception ex){
            ex.printStackTrace();
        }
        }
    }//GEN-LAST:event_deleteUserBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        GymAPP app = new GymAPP();
        this.hide();
        app.setVisible(true);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void userSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSearchBtnActionPerformed
        // TODO add your handling code here:
        if (userSearchIDTxt.getText().isEmpty()) {
            dataFromDBToTableuser();
        } else {
            try {
                User theUser= new User(userSearchIDTxt.getText());
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                UserInterfaceService service = (UserInterfaceService) registry.lookup("user");
                List<User> users = service.searchUsers(theUser);
 
                // clear rows
                tableUserGym.setRowCount(0);
 
                users.forEach((user) -> {
                    tableUserGym.addRow(new Object[] {
                        user.getUserID(),
                        user.getUserNames(),
                        user.getUserEmail(),
                        user.getUserPassword(),
                    });
                });
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_userSearchBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        // TODO add your handling code here:
        try{
        userTable.print();
        }catch (Exception ex){
        ex.printStackTrace();
        }
    }//GEN-LAST:event_printBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton deleteUserBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printBtn;
    private javax.swing.JButton registerUserBtn;
    private javax.swing.JButton updateUserBtn;
    private javax.swing.JTextField userEmailTxt;
    private javax.swing.JTextField userIDTxt;
    private javax.swing.JPasswordField userPasswordTxt;
    private javax.swing.JButton userSearchBtn;
    private javax.swing.JTextField userSearchIDTxt;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField usernameTxt;
    // End of variables declaration//GEN-END:variables
}
