
package view;

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import model.Trainer;
import java.sql.*;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.TrainerInterfaceService;
/**
 *
 * @author jeanj
 */
public class TrainerForm2 extends javax.swing.JFrame {

    /**
     * Creates new form TrainerForm2
     */
    public TrainerForm2() {
        initComponents();
        addColumnTable();
        dataFromDBToTabletrainer();
    }
    
    //Global Variables
    DefaultTableModel tableTrainerGym = new DefaultTableModel();
    
    private void addColumnTable(){
       tableTrainerGym.addColumn("TRAINER ID");
       tableTrainerGym.addColumn("TRAINER NAMES");
       tableTrainerGym.addColumn("TRAINER AGE");
       tableTrainerGym.addColumn("ADDRESS");
       tableTrainerGym.addColumn("PHONE");
      
       //Set table model 
       trainerTable.setModel(tableTrainerGym);
    }
    private void dataFromDBToTabletrainer() {
        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
            TrainerInterfaceService service = (TrainerInterfaceService) registry.lookup("trainer");
            List<Trainer> trainers = service.allTrainers();
            tableTrainerGym.setRowCount(0);
            trainers.forEach((trainer) -> {
                 tableTrainerGym.addRow(new Object[]{
                    trainer.getTrainerID(),
                    trainer.getTrainerNames(),
                    trainer.getTrainerAge(),
                    trainer.getTrainerAddr(),
                    trainer.getTrainerPhone(),         
                    
                 });
             });
        } catch (Exception ex) {
            ex.printStackTrace();
        }

}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        trainerIDTxt = new javax.swing.JTextField();
        trainerAgeTxt = new javax.swing.JTextField();
        trainerAddressTxt = new javax.swing.JTextField();
        trainerPhoneTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        trainerNamesTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        trainerTable = new javax.swing.JTable();
        addTrainerBtn = new javax.swing.JButton();
        updateTrainerBtn = new javax.swing.JButton();
        deleteTrainerBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        searchTrainerBtn = new javax.swing.JButton();
        trainerSearchIDTxt = new javax.swing.JTextField();
        printBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel3.setBackground(new java.awt.Color(0, 255, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-personal-trainer-50.png"))); // NOI18N
        jLabel1.setText("TRAINER PAGE");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(524, 524, 524)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("TRAINER NAMES");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("TRAINER AGE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("ADDRESS");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("MOBILE PHONE");

        trainerIDTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        trainerAgeTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        trainerAddressTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        trainerPhoneTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("TRAINER ID");

        trainerNamesTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        trainerNamesTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainerNamesTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(trainerIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(trainerPhoneTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(trainerNamesTxt)
                            .addComponent(trainerAgeTxt)
                            .addComponent(trainerAddressTxt))))
                .addGap(23, 23, 23))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(trainerIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(trainerNamesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainerAgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(trainerAddressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainerPhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        trainerTable.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        trainerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        trainerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trainerTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(trainerTable);

        addTrainerBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        addTrainerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-add-user-male-48.png"))); // NOI18N
        addTrainerBtn.setText("ADD TRAINER");
        addTrainerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTrainerBtnActionPerformed(evt);
            }
        });

        updateTrainerBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        updateTrainerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-edit-profile-48.png"))); // NOI18N
        updateTrainerBtn.setText("UPDATE TRAINER");
        updateTrainerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTrainerBtnActionPerformed(evt);
            }
        });

        deleteTrainerBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        deleteTrainerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-remove-user-female-48.png"))); // NOI18N
        deleteTrainerBtn.setText("DELETE TRAINER");
        deleteTrainerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTrainerBtnActionPerformed(evt);
            }
        });

        cancelBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-back-arrow-48.png"))); // NOI18N
        cancelBtn.setText("CANCEL");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        searchTrainerBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        searchTrainerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-search-client-48.png"))); // NOI18N
        searchTrainerBtn.setText("SEARCH");
        searchTrainerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTrainerBtnActionPerformed(evt);
            }
        });

        trainerSearchIDTxt.setFont(new java.awt.Font("Tahoma", 2, 20)); // NOI18N

        printBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        printBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_icon/icons8-print-48.png"))); // NOI18N
        printBtn.setText("PRINT");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addTrainerBtn)
                        .addGap(26, 26, 26)
                        .addComponent(updateTrainerBtn)
                        .addGap(27, 27, 27)
                        .addComponent(deleteTrainerBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(trainerSearchIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTrainerBtn)))
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(440, 440, 440)
                .addComponent(printBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTrainerBtn)
                    .addComponent(updateTrainerBtn)
                    .addComponent(deleteTrainerBtn)
                    .addComponent(cancelBtn)
                    .addComponent(searchTrainerBtn)
                    .addComponent(trainerSearchIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void trainerNamesTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainerNamesTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainerNamesTxtActionPerformed

    private void trainerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trainerTableMouseClicked
        // TODO add your handling code here:
        tableTrainerGym = (DefaultTableModel)trainerTable.getModel();
        int select = trainerTable.getSelectedRow();

        trainerIDTxt.setText(tableTrainerGym.getValueAt(select, 0).toString());
        trainerNamesTxt.setText(tableTrainerGym.getValueAt(select, 1).toString());
        trainerAgeTxt.setText(tableTrainerGym.getValueAt(select, 2).toString());
        trainerAddressTxt.setText(tableTrainerGym.getValueAt(select, 3).toString());
        trainerPhoneTxt.setText(tableTrainerGym.getValueAt(select, 4).toString());
    }//GEN-LAST:event_trainerTableMouseClicked

    private void addTrainerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTrainerBtnActionPerformed
        // Surround with Try and Catch
        try{
            //Instantiate the Trainer MODEL
            Trainer theTrainer = new Trainer();

            // Validations
            if(trainerIDTxt.getText().trim().isEmpty()
                || trainerNamesTxt.getText().trim().isEmpty()
                || trainerAgeTxt.getText().trim().isEmpty()
                || trainerAddressTxt.getText().trim().isEmpty()
                || trainerPhoneTxt.getText().trim().isEmpty())
            {JOptionPane.showMessageDialog(this, "PLEASE PROVIDE ALL INFORMATION!","DATA REQUIRED",JOptionPane.WARNING_MESSAGE);
            }else{
                if(trainerIDTxt.getText().length() ==5){
                    if(trainerPhoneTxt.getText().length()>= 10){

                        //Set The Model
                        theTrainer.setTrainerID(trainerIDTxt.getText());
                        theTrainer.setTrainerNames(trainerNamesTxt.getText());
                        theTrainer.setTrainerAge(trainerAgeTxt.getText());
                        theTrainer.setTrainerAddr(trainerAddressTxt.getText());
                        theTrainer.setTrainerPhone(trainerPhoneTxt.getText());


                        try {
                            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                            TrainerInterfaceService service = (TrainerInterfaceService) registry.lookup("trainer");
                            String feedback = service.registerTrainer(theTrainer);
                            JOptionPane.showMessageDialog(this, feedback);
                            TrainerForm2 Tr = new TrainerForm2();
                            Tr.setVisible(true);
                            this.dispose();
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "PHONE MUST HAVE AT LEAST 10 CHARACTERS","TRY AGAIN",JOptionPane.ERROR_MESSAGE);

                    }
                }else{
                    JOptionPane.showMessageDialog(this, "TRAINER ID MUST HAVE 5 CHARACTER","ID ERROR",JOptionPane.ERROR_MESSAGE);
                    dataFromDBToTabletrainer();
                }
            }

        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_addTrainerBtnActionPerformed

    private void updateTrainerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTrainerBtnActionPerformed
        // Surround with Try and Catch
        try {
            //Instantiate the Trainer MODEL
            Trainer theTrainer = new Trainer();
            // Validations
            if (trainerNamesTxt.getText().trim().isEmpty()
                || trainerAgeTxt.getText().trim().isEmpty()
                || trainerAddressTxt.getText().trim().isEmpty()
                || trainerPhoneTxt.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "PROVIDE ALL INFORMATION!", "DATA REQUIRED", JOptionPane.WARNING_MESSAGE);
            } else {
                if (trainerPhoneTxt.getText().length() >= 10 ) {
                    //Set The Model

                    theTrainer.setTrainerNames(trainerNamesTxt.getText());
                    theTrainer.setTrainerAge(trainerAgeTxt.getText());
                    theTrainer.setTrainerAddr(trainerAddressTxt.getText());
                    theTrainer.setTrainerPhone(trainerPhoneTxt.getText());
                    theTrainer.setTrainerID(trainerIDTxt.getText());

                    try {
                            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                            TrainerInterfaceService service = (TrainerInterfaceService) registry.lookup("trainer");
                            String feedback = service.updateTrainer(theTrainer);
                            JOptionPane.showMessageDialog(this, feedback);
                            TrainerForm2 Tr = new TrainerForm2();
                            Tr.setVisible(true);
                            this.dispose();
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                } else {
                    JOptionPane.showMessageDialog(this, "PHONE MUST HAVE AT LEAST 10 CHARACTERS", "TRY AGAIN", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_updateTrainerBtnActionPerformed

    private void deleteTrainerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTrainerBtnActionPerformed
        // Surround with Try and Catch
        if (trainerNamesTxt.getText().isEmpty()
              ||    trainerAgeTxt.getText().isEmpty()
              ||    trainerAddressTxt.getText().isEmpty()
              ||    trainerPhoneTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "SELECT A TRAINER TO DELETE");
        }else{
            try {
                Trainer theTrainer = new Trainer(trainerIDTxt.getText());
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                TrainerInterfaceService service = (TrainerInterfaceService) registry.lookup("trainer");
                String feedback = service.deleteTrainer(theTrainer);
                JOptionPane.showMessageDialog(this, feedback);
                TrainerForm2 Tr = new TrainerForm2();
                Tr.setVisible(true);
                this.dispose();
                } catch (Exception ex) {
                    ex.printStackTrace();                
            }
        }
    }//GEN-LAST:event_deleteTrainerBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        Gym_App_User app = new Gym_App_User();
        this.hide();
        app.setVisible(true);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void searchTrainerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTrainerBtnActionPerformed
        // TODO add your handling code here:
        if (trainerSearchIDTxt.getText().isEmpty()) {
            dataFromDBToTabletrainer();
        } else {
            try {
                Trainer theTrainer = new Trainer(trainerSearchIDTxt.getText());
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 5000);
                TrainerInterfaceService service = (TrainerInterfaceService) registry.lookup("trainer");
                List<Trainer> trainers = service.searchTrainers(theTrainer);
 
                // clear rows
                tableTrainerGym.setRowCount(0);
 
                trainers.forEach((trainer) -> {
                    tableTrainerGym.addRow(new Object[] {
                        trainer.getTrainerID(),
                        trainer.getTrainerNames(),
                        trainer.getTrainerAge(),
                        trainer.getTrainerAddr(),
                        trainer.getTrainerPhone(), 
                    });
                });
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_searchTrainerBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        try{
        trainerTable.print();
        }catch (Exception ex){
        ex.printStackTrace();
        }
    }//GEN-LAST:event_printBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrainerForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrainerForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrainerForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrainerForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrainerForm2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTrainerBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton deleteTrainerBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton printBtn;
    private javax.swing.JButton searchTrainerBtn;
    private javax.swing.JTextField trainerAddressTxt;
    private javax.swing.JTextField trainerAgeTxt;
    private javax.swing.JTextField trainerIDTxt;
    private javax.swing.JTextField trainerNamesTxt;
    private javax.swing.JTextField trainerPhoneTxt;
    private javax.swing.JTextField trainerSearchIDTxt;
    private javax.swing.JTable trainerTable;
    private javax.swing.JButton updateTrainerBtn;
    // End of variables declaration//GEN-END:variables
}
